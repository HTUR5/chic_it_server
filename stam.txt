import { initializeApp } from 'firebase/app';
import { getFirestore, collection, query, where, setDoc } from 'firebase/firestore';
import { FieldValue } from 'firebase/firestore';
import "firebase/auth"
import admin from 'firebase-admin';
import serviceAccount from './service_account.json' assert { type: "json" };

const firebaseConfig = {
  apiKey: "AIzaSyBrcpckvsh7oBhIn0q1rt2sPlDY7kKwtEM",
  authDomain: "chicit-a5e00.firebaseapp.com",
  databaseURL: "https://chicit-a5e00-default-rtdb.firebaseio.com",
  projectId: "chicit-a5e00",
};

const app = initializeApp(firebaseConfig);
const db = getFirestore(app);
//const usersCollection = fb.collection(db, 'users');

const usersCollection = collection(db, 'users');

admin.initializeApp({
  credential: admin.credential.cert(serviceAccount),
  databaseURL: 'https://chicit-a5e00-default-rtdb.firebaseio.com'
});


export async function addUser(username, fullName, email, phone, password) {
  try {
    const authUser = await admin.auth().createUser({ email, password });
    const newUser = {
      uid: authUser.uid,
      email: email,
      username: username,
      fullName: fullName || '', // assign an empty string if fullName is undefined
      phone: phone || '', // assign an empty string if phone is undefined
    };
    const options = { ignoreUndefinedProperties: true };
    
    //const newUserRef = fb.doc(usersCollection, authUser.uid);
    //await fb.setDoc(newUserRef, newUser, options);

    await setDoc(usersCollection.doc(authUser.uid), newUser, options);
    console.log(`New user ${username} created successfully.`);
  } catch (error) {
    console.error('Error creating new user:', error);
  }
  return "done"
}



export async function checkIfEmailExists(email) {
  try {
    const q = query(usersCollection, where('email', '==', email));
    const ans = await getDocs(q);
    if (ans.docs.length === 0 ) {
      // do something
    }
  } catch (error) {
    console.error('Error checking if email exists:', error);
  }
}

// export async function addUser(username, fullName, email, phone, password) {
//   try {
//     const ans = await db.collection('users').where('email', '==', email).get();
//     if (ans && ans.docs.length === 0 ) {
//       const authUser = await admin.auth().createUser({ email, password });
//       const newUser = {
//         uid: authUser.uid,
//         email: email,
//         username: username,
//         fullName: fullName || '', // assign an empty string if fullName is undefined
//         phone: phone || '', // assign an empty string if phone is undefined
//       };
//       const options = { ignoreUndefinedProperties: true };
//       await admin.firestore().collection('users').doc(authUser.uid).set(newUser, options);
      
//       console.log(`New user ${username} created successfully.`);
//     } else {
//       console.log(`User with email ${email} already exists.`);
//     }
//   } catch (error) {
//     console.error('Error creating new user:', error);
//   }
// }














// import { initializeApp } from 'firebase/app';
// import * as fb from 'firebase/firestore';
// import 'firebase/auth';
// import 'firebase/firestore';
// import { FieldValue } from 'firebase/firestore';
// import "firebase/auth"

// const firebaseConfig = {
    // apiKey: "AIzaSyBrcpckvsh7oBhIn0q1rt2sPlDY7kKwtEM",
    // authDomain: "chicit-a5e00.firebaseapp.com",
    // databaseURL: "https://chicit-a5e00-default-rtdb.firebaseio.com",
    // projectId: "chicit-a5e00",
// };

// const app = initializeApp(firebaseConfig);
// const db = fb.getFirestore(app);

// // Use fb instead of db
// const usersCollection = fb.collection(db, 'users');

// //add new user to the database
// export async function addUser(username, fullName, email, phone, password) {
//   try {
//     const authUser = await admin.auth().createUser({ email, password });
//     const newUser = {
//       uid: authUser.uid,
//       email: email,
//       username: username,
//       fullName: fullName,
//       phone: phone
//     };
//     await admin.firestore().collection('users').doc(authUser.uid).set(newUser);
//     console.log(`New user ${username} created successfully.`);
//   } catch (error) {
//     console.error('Error creating new user:', error);
//   }
// }


export async function addUser1(userId, username, fullName, email, phone, password) {
  console.log("addUser");
  try {
    const user = await fb.auth().createUser({
      email,
      password
    });

    await fb.setDoc(usersCollection.doc(userId), {
      userId,
      username,
      fullName,
      email,
      phone,
      createdAt: fb.firestore.FieldValue.serverTimestamp()
    });

    return user.uid;
  } catch (error) {
    console.error('Error creating user:', error);
    throw new Error('Failed to create user');
  }
}


